const int N = 1e6, LGN = __lg(N) + 1;
struct SparseTable {
    int spt[N][LGN];
    void build(int *a, int n) {
        for(int i = 0; i < n; i++)
            spt[i][0] = a[i];
        for(int j = 1; (1 << j) <= n; j++) {
            for(int i = 0; i + (1 << j) <= n; i++) {
                int left = spt[i][j - 1];
                int right = spt[i + (1 << (j - 1))][j - 1];
                spt[i][j] = left < right ? left : right;
            }
        }
    }
    int query(int st, int en) {
        int j = __lg(en - st + 1);
        int left = spt[st][j];
        int right = spt[en - (1 << j) + 1][j];
        return left < right ? left : right;
    }
} spt;
