#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#define ll long long
#define WhoCare ios_base::sync_with_stdio(false);cin.tie(NULL);
#define F first
#define S second
using namespace std;
using namespace __gnu_pbds;
typedef tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;
int dx[] = {1, -1, 0, 0};
int dy[] = {0, 0, -1, 1};
int dx8[8] = {1, 1, 1, 0, 0, -1, -1, -1};
int dy8[8] = {1, -1, 0, 1, -1, 1, -1, 0};
const int N = 1030;
int b[N][N], last[N][N], n;
void add(int x, int y, int val) {
    for(int i = x; i <= n; i += i & -i)
        for(int j = y; j <= n; j += j & -j)
            b[i][j] += val;
}
int sum(int x, int y) {
    int ans = 0;
    for(int i = x; i; i -= i & -i)
        for(int j = y; j; j -= j & -j)
            ans += b[i][j];
    return ans;
}
int sum(int x1, int y1, int x2, int y2) {
    return sum(x2, y2) - sum(x1 - 1, y2) - sum(x2, y1 - 1) + sum(x1 - 1, y1 - 1);
}
int main() {

    WhoCare
    int tc;
    cin >> tc;
    while(tc--) {

        cin >> n;
        for(int i = 0; i <= n; i++)
            for(int j = 0; j <= n; j++)
                b[i][j] = last[i][j] = 0;
        string s;
        cin >> s;
        while(s != "END") {
            if(s == "SET") {
                int x, y, v;
                cin >> x >> y >> v;
                x++, y++;
                add(x, y, -last[x][y]);
                add(x, y, v);
                last[x][y] = v;
            } else {
                int x1, y1, x2, y2;
                cin >> x1 >> y1 >> x2 >> y2;
                x1++, x2++, y1++, y2++;
                cout << sum(x1, y1, x2, y2) << "\n";
            }
            cin >> s;
        }
    }
    return 0;
}
