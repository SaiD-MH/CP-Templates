// Just have a little faith | Challenge Accepted | Keep it simple As U Can
#include<bits/stdc++.h>
#define ll long long
#define F first
#define S second
using namespace std;
int dx[]={1,-1,0,0};
int dy[]={0,0,-1,1};
int dx8[8]={1,1,1,0,0,-1,-1,-1};
int dy8[8]={1,-1,0,1,-1,1,-1,0};
vector<ll>primes;
const int N=1e5+2;
void sieve(){
vector<bool>arr(N+2,0);
arr[0]=arr[1]=1;
for(ll i=2;i*i<=N;i++){
    if(arr[i]==0){
        for(ll j=i*i;j<=N;j+=i){
            arr[j]=1;
        }
    }
} for(int i=0;i<N;i++){
    if(arr[i]==0)
        primes.push_back(i);
    }
}
void segment(ll l,ll r){
if(l==1)l++;
int mx_sz=r-l+1;
vector<int>arr(mx_sz,0);
for(ll p:primes){
    if(p*p<=r){
        ll st=(l/p)*p;
        if(st<l)st+=p;
        for(;st<=r;st+=p){
            if(st!=p)
                arr[st-l]=1;
        }
    }}
for(int i=0;i<mx_sz;i++){
    if(arr[i]==0){
        cout<<l+i<<"\n";
    }
}}
int main(){
    sieve();
    int t;
    cin>>t;
    while(t--){
        ll l,r;
        cin>>l>>r;
        segment(l,r);
        puts("");
    }
return 0;
}
