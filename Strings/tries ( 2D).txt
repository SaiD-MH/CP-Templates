#include<bits/stdc++.h>
#define ll long long
#define WhoCare ios_base::sync_with_stdio(false);cin.tie(NULL);
#define F first
#define S second
using namespace std;
int dx[] = {1, -1, 0, 0};
int dy[] = {0, 0, -1, 1};
int dx8[8] = {1, 1, 1, 0, 0, -1, -1, -1};
int dy8[8] = {1, -1, 0, 1, -1, 1, -1, 0};
const int N = 1e6 + 7; // Number of nodes
struct Tries {
    int nxt[N][26];
    int cnt[N], nNodes = 0;
    int add_node() {
        memset(nxt[nNodes], -1, sizeof nxt[nNodes]);
        return nNodes++;
    }
    void init() {
        nNodes = 0;
        add_node(); // make root
    }
    void insert(const string &s) {
        int cur = 0;
        for(char c : s) {
            int &child = nxt[cur][c - 'a'];
            if(child == -1)
                child = add_node();
            cur = child;
        }
        ++cnt[cur];
    }
    int count(const string &s) {
        int cur = 0;
        for(char c : s) {
            int &child = nxt[cur][c - 'a'];
            if(child == -1)
                return 0;
            cur = child;
        }
        return cnt[cur];
    }
};
Tries trie;
int main() {

    WhoCare
    int tc;
    tc = 1;
    while(tc--) {
        
    }
    return 0;
}
